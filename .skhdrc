#### Default contents preserved for future reading
#### #  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#### #                     be found at https://github.com/koekeishiya/skhd/issues/1
#### #
#### #                     A hotkey is written according to the following rules:
#### #
#### #                       hotkey       = <mode> '<' <action> | <action>
#### #
#### #                       mode         = 'name of mode' | <mode> ',' <mode>
#### #
#### #                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#### #                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#### #                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#### #
#### #                       keysym       = <mod> '-' <key> | <key>
#### #
#### #                       mod          = 'modifier keyword' | <mod> '+' <mod>
#### #
#### #                       key          = <literal> | <keycode>
#### #
#### #                       literal      = 'single letter or built-in keyword'
#### #
#### #                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#### #
#### #                       proc_map_lst = * <proc_map>
#### #
#### #                       proc_map     = <string> ':' <command>
#### #
#### #                       string       = '"' 'sequence of characters' '"'
#### #
#### #                       command      = command is executed through '$SHELL -c' and
#### #                                      follows valid shell syntax. if the $SHELL environment
#### #                                      variable is not set, it will default to '/bin/bash'.
#### #                                      when bash is used, the ';' delimeter can be specified
#### #                                      to chain commands.
#### #
#### #                                      to allow a command to extend into multiple lines,
#### #                                      prepend '\' at the end of the previous line.
#### #
#### #                                      an EOL character signifies the end of the bind.
#### #
#### #                       ->           = keypress is not consumed by skhd
#### #
#### #  NOTE(koekeishiya): A mode is declared according to the following rules:
#### #
#### #                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#### #                                   '::' <name> '@'               | '::' <name>
#### #
#### #                       name      = desired name for this mode,
#### #
#### #                       @         = capture keypresses regardless of being bound to an action
#### #
#### #                       command   = command is executed through '$SHELL -c' and
#### #                                   follows valid shell syntax. if the $SHELL environment
#### #                                   variable is not set, it will default to '/bin/bash'.
#### #                                   when bash is used, the ';' delimeter can be specified
#### #                                   to chain commands.
#### #
#### #                                   to allow a command to extend into multiple lines,
#### #                                   prepend '\' at the end of the previous line.
#### #
#### #                                   an EOL character signifies the end of the bind.
#### 
#### # add an on_enter command to the default mode
#### # :: default : chunkc border::color 0xff775759
#### #
#### # defines a new mode 'test' with an on_enter command, that captures keypresses
#### # :: test @ : chunkc border::color 0xff24ccaa
#### #
#### # from 'default' mode, activate mode 'test'
#### # cmd - x ; test
#### #
#### # from 'test' mode, activate mode 'default'
#### # test < cmd - x ; default
#### #
#### # launch a new terminal instance when in either 'default' or 'test' mode
#### # default, test < cmd - return : open -na /Applications/Terminal.app
#### 
#### # application specific bindings
#### #
#### # cmd - n [
#### #     "kitty"       : echo "hello kitty"
#### #     "qutebrowser" : echo "hello qutebrowser"
#### #     "finder"      : false
#### # ]
#### 
#### # open terminal, blazingly fast compared to iTerm/Hyper
#### cmd - return : /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~
#### 
#### # open qutebrowser
#### cmd + shift - return : ~/Scripts/qtb.sh
#### 
#### # open mpv
#### cmd - m : open -na /Applications/mpv.app $(pbpaste)
#### 
#### # close focused window
#### alt - w : chunkc tiling::window --close
#### 
#### # focus window
#### alt - h : chunkc tiling::window --focus west
#### alt - j : chunkc tiling::window --focus south
#### alt - k : chunkc tiling::window --focus north
#### alt - l : chunkc tiling::window --focus east
#### 
#### cmd - j : chunkc tiling::window --focus prev
#### cmd - k : chunkc tiling::window --focus next
#### 
#### # equalize size of windows
#### shift + alt - 0 : chunkc tiling::desktop --equalize
#### 
#### # swap window
#### shift + alt - h : chunkc tiling::window --swap west
#### shift + alt - j : chunkc tiling::window --swap south
#### shift + alt - k : chunkc tiling::window --swap north
#### shift + alt - l : chunkc tiling::window --swap east
#### 
#### # move window
#### shift + cmd - h : chunkc tiling::window --warp west
#### shift + cmd - j : chunkc tiling::window --warp south
#### shift + cmd - k : chunkc tiling::window --warp north
#### shift + cmd - l : chunkc tiling::window --warp east
#### 
#### # make floating window fill screen
#### shift + alt - up     : chunkc tiling::window --grid-layout 1:1:0:0:1:1
#### 
#### # make floating window fill left-half of screen
#### shift + alt - left   : chunkc tiling::window --grid-layout 1:2:0:0:1:1
#### 
#### # make floating window fill right-half of screen
#### shift + alt - right  : chunkc tiling::window --grid-layout 1:2:1:0:1:1
#### 
#### # create desktop, move window and follow focus
#### shift + cmd - n : chunkc tiling::desktop --create;\
####                   id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
####                   chunkc tiling::window --send-to-desktop $(echo ${id##* });\
####                   chunkc tiling::desktop --focus $(echo ${id##* })
#### 
#### # create desktop and follow focus
#### cmd + alt - n : chunkc tiling::desktop --create;\
####                 id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
####                 chunkc tiling::desktop --focus $(echo ${id##* })
#### # destroy desktop
#### cmd + alt - w : chunkc tiling::desktop --annihilate
#### 
#### # fast focus desktop
#### cmd + alt - x : chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
#### cmd + alt - z : chunkc tiling::desktop --focus prev
#### cmd + alt - c : chunkc tiling::desktop --focus next
#### cmd + alt - 1 : chunkc tiling::desktop --focus 1
#### cmd + alt - 2 : chunkc tiling::desktop --focus 2
#### cmd + alt - 3 : chunkc tiling::desktop --focus 3
#### cmd + alt - 4 : chunkc tiling::desktop --focus 4
#### cmd + alt - 5 : chunkc tiling::desktop --focus 5
#### cmd + alt - 6 : chunkc tiling::desktop --focus 6
#### # cmd + alt - 7 : chunkc tiling::desktop --focus 7
#### 
#### # send window to desktop
#### shift + alt - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
#### shift + alt - z : chunkc tiling::window --send-to-desktop prev
#### shift + alt - c : chunkc tiling::window --send-to-desktop next
#### shift + alt - 1 : chunkc tiling::window --send-to-desktop 1
#### shift + alt - 2 : chunkc tiling::window --send-to-desktop 2
#### shift + alt - 3 : chunkc tiling::window --send-to-desktop 3
#### shift + alt - 4 : chunkc tiling::window --send-to-desktop 4
#### shift + alt - 5 : chunkc tiling::window --send-to-desktop 5
#### shift + alt - 6 : chunkc tiling::window --send-to-desktop 6
#### # shift + alt - 7 : chunkc tiling::window --send-to-desktop 7
#### 
#### # send window to desktop and follow focus
#### shift + cmd - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop); chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
#### shift + cmd - z : chunkc tiling::window --send-to-desktop prev; chunkc tiling::desktop --focus prev
#### shift + cmd - c : chunkc tiling::window --send-to-desktop next; chunkc tiling::desktop --focus next
#### shift + cmd - 1 : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop --focus 1
#### shift + cmd - 2 : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop --focus 2
#### shift + cmd - 3 : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop --focus 3
#### shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop --focus 4
#### shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop --focus 5
#### shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop --focus 6
#### # shift + cmd - 7 : chunkc tiling::window --send-to-desktop 7; chunkc tiling::desktop --focus 7
#### 
#### # focus monitor
#### ctrl + alt - z  : chunkc tiling::monitor -f prev
#### ctrl + alt - c  : chunkc tiling::monitor -f next
#### ctrl + alt - 1  : chunkc tiling::monitor -f 1
#### ctrl + alt - 2  : chunkc tiling::monitor -f 2
#### ctrl + alt - 3  : chunkc tiling::monitor -f 3
#### 
#### # send window to monitor and follow focus
#### ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
#### ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
#### ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
#### ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
#### ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3
#### 
#### # increase region size
#### shift + alt - a : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
#### shift + alt - s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
#### shift + alt - w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
#### shift + alt - d : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east
#### 
#### # decrease region size
#### shift + cmd - a : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
#### shift + cmd - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
#### shift + cmd - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
#### shift + cmd - d : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east
#### 
#### # set insertion point for focused container
#### ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
#### ctrl + alt - h : chunkc tiling::window --use-insertion-point west
#### ctrl + alt - j : chunkc tiling::window --use-insertion-point south
#### ctrl + alt - k : chunkc tiling::window --use-insertion-point north
#### ctrl + alt - l : chunkc tiling::window --use-insertion-point east
#### 
#### # rotate tree
#### alt - r : chunkc tiling::desktop --rotate 90
#### 
#### # mirror tree y-axis
#### alt - y : chunkc tiling::desktop --mirror vertical
#### 
#### # mirror tree x-axis
#### alt - x : chunkc tiling::desktop --mirror horizontal
#### 
#### # toggle desktop offset
#### alt - a : chunkc tiling::desktop --toggle offset
#### 
#### # toggle window fullscreen
#### alt - f : chunkc tiling::window --toggle fullscreen
#### 
#### # toggle window native fullscreen
#### shift + alt - f : chunkc tiling::window --toggle native-fullscreen
#### 
#### # toggle window parent zoom
#### alt - d : chunkc tiling::window --toggle parent
#### 
#### # toggle window split type
#### alt - e : chunkc tiling::window --toggle split
#### 
#### # toggle window fade
#### alt - q : chunkc tiling::window --toggle fade
#### 
#### # float / unfloat window and center on screen
#### alt - t : chunkc tiling::window --toggle float;\
####           chunkc tiling::window --grid-layout 4:4:1:1:2:2
#### 
#### # toggle sticky
#### alt - s : chunkc tiling::window --toggle sticky
#### 
#### # toggle sticky, float and resize to picture-in-picture size
#### alt - p : chunkc tiling::window --toggle sticky;\
####           chunkc tiling::window --grid-layout 5:5:4:0:1:1
#### 
#### # float next window to be tiled
#### shift + alt - t : chunkc set window_float_next 1
#### 
#### # change layout of desktop
#### ctrl + alt - a : chunkc tiling::desktop --layout bsp
#### ctrl + alt - s : chunkc tiling::desktop --layout monocle
#### ctrl + alt - d : chunkc tiling::desktop --layout float
#### 
#### ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

# set border color for different modes
:: default              : yabai -m config active_window_border_color 0xddbdd322
:: switcher @           : yabai -m config active_window_border_color 0xddd5c4a1
:: ytd      @           : yabai -m config active_window_border_color 0xddd75f5f
:: move     @           : yabai -m config active_window_border_color 0xdd458588
:: tree     @           : yabai -m config active_window_border_color 0xddfabd2f
:: spacey   @           : yabai -m config active_window_border_color 0xddb16286
:: info     @           : yabai -m config active_window_border_color 0xddcd950c


# 0x2A is \
# toggle between modes
ctrl - 0x2A             ; switcher
switcher < ctrl - 0x2A  ; default
ytd < ctrl - 0x2A       ; default
move < ctrl - 0x2A      ; default
spacey < ctrl - 0x2A    ; default
tree < ctrl - 0x2A      ; default
info < ctrl - 0x2A      ; default

switcher < y            ; ytd
switcher < m            ; move
switcher < s            ; spacey
switcher < t            ; tree
switcher < i            ; info

#cmd - return            :   osascript /Users/hunner/local/bin/terminal.scpt
#cmd - return            :   /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~
#cmd - return            :   osascript /Users/hunner/local/bin/iterm_window.scpt
cmd + shift - return            :   ~/local/bin/open_iterm.sh
cmd + ctrl + alt - 9    :   osascript /Users/hunner/local/bin/grayscale.scpt

cmd + alt - h           :   yabai -m window --focus west
cmd + alt - j           :   yabai -m window --focus south
cmd + alt - k           :   yabai -m window --focus north
cmd + alt - l           :   yabai -m window --focus east

cmd + alt + shift - h   :   yabai -m window --warp west
cmd + alt + shift - j   :   yabai -m window --warp south
cmd + alt + shift - k   :   yabai -m window --warp north
cmd + alt + shift - l   :   yabai -m window --warp east

cmd + alt - 1           :   yabai -m space --focus 1
cmd + alt - 2           :   yabai -m space --focus 2
cmd + alt - 3           :   yabai -m space --focus 3
cmd + alt - 4           :   yabai -m space --focus 4
cmd + alt - 5           :   yabai -m space --focus 5
cmd + alt - 6           :   yabai -m space --focus 6
cmd + alt - 7           :   yabai -m space --focus 7
cmd + alt - 8           :   yabai -m space --focus 8
cmd + alt - 9           :   yabai -m space --focus 9
cmd + alt - 0           :   yabai -m space --focus 10

cmd + alt + shift - 1   :   yabai -m window --space 1
cmd + alt + shift - 2   :   yabai -m window --space 2
cmd + alt + shift - 3   :   yabai -m window --space 3
cmd + alt + shift - 4   :   yabai -m window --space 4
cmd + alt + shift - 5   :   yabai -m window --space 5
cmd + alt + shift - 6   :   yabai -m window --space 6
cmd + alt + shift - 7   :   yabai -m window --space 7
cmd + alt + shift - 8   :   yabai -m window --space 8
cmd + alt + shift - 9   :   yabai -m window --space 9
cmd + alt + shift - 0   :   yabai -m window --space 10

# Focus display
cmd + alt - o           :   yabai -m display --focus 2
cmd + alt - e           :   yabai -m display --focus 1
cmd + alt - u           :   yabai -m display --focus 3

# Move window to display
cmd + alt + shift - o   :   yabai -m window --display 2
cmd + alt + shift - e   :   yabai -m window --display 1
cmd + alt + shift - u   :   yabai -m window --display 3

# Move space to display
cmd + alt + shift + ctrl - o :   yabai -m space --display 2
cmd + alt + shift + ctrl - e :   yabai -m space --display 1
cmd + alt + shift + ctrl - u :   yabai -m space --display 3

# Focus spaces
cmd + alt - left        :   yabai -m space --focus prev
cmd + alt - right       :   yabai -m space --focus next

# Swap spaces
cmd + alt + shift - 1   :   yabai -m space --focus 1; yabai -m space --swap 1
cmd + alt + shift - 2   :   yabai -m space --focus 2; yabai -m space --swap 2
cmd + alt + shift - 3   :   yabai -m space --focus 3; yabai -m space --swap 3
cmd + alt + shift - 4   :   yabai -m space --focus 4; yabai -m space --swap 4
cmd + alt + shift - 5   :   yabai -m space --focus 5; yabai -m space --swap 5
cmd + alt + shift - 6   :   yabai -m space --focus 6; yabai -m space --swap 6
cmd + alt + shift - 7   :   yabai -m space --focus 7; yabai -m space --swap 7
cmd + alt + shift - 8   :   yabai -m space --focus 8; yabai -m space --swap 8
cmd + alt + shift - 9   :   yabai -m space --focus 9; yabai -m space --swap 9
cmd + alt + shift - 0   :   yabai -m space --focus 10; yabai -m space --swap 10

# Reorder spaces
cmd + alt + shift - left    :   yabai -m space --move prev
cmd + alt + shift - right   :   yabai -m space --move next

## ytd mode
#ytd - x                 :   ytc play;\
#                            khd -e "mode activate default"
#
#ytd - s                 :   ytc mkfav;\
#                            khd -e "mode activate default"
#
## 0x32 == <
#ytd - 0x32              :   ytc fav
#ytd - z                 :   ytc prev
#ytd - c                 :   ytc next
#ytd - v                 :   ytc stop
#ytd - a                 :   ytc volup
#ytd - d                 :   ytc voldown
#ytd - right             :   ytc seekfw
#ytd - left              :   ytc seekbk

# Swap windows around
move < h                 :   yabai -m window --swap west
move < j                 :   yabai -m window --swap south
move < k                 :   yabai -m window --swap north
move < l                 :   yabai -m window --swap east

# Move windows around
move < shift - h         :   yabai -m window --warp west
move < shift - j         :   yabai -m window --warp south
move < shift - k         :   yabai -m window --warp north
move < shift - l         :   yabai -m window --warp east

# toggle window float
move < t                 :   yabai -m window --toggle float;\
                             yabai -m window --grid 4:4:1:1:2:2

# toggle window fullscreen
move < f                 :   yabai -m window --toggle zoom-fullscreen

# toggle window parent zoom
move < d                 :   yabai -m window --toggle zoom-parent

# toggle sticky, float and resize to picture-in-picture size
move < s                 :   yabai -m window --toggle sticky;\
                             yabai -m window --grid 5:5:4:0:1:1

# Change spacey mode
spacey < a               :   yabai -m space --layout bsp
spacey < s               :   yabai -m space --layout monocle
spacey < d               :   yabai -m space --layout float

# Change padding
spacey < p               :   yabai -m space --padding inc
spacey < shift - p       :   yabai -m space --padding dec

# Change gap
spacey < g               :   yabai -m space --gap inc
spacey < shift - g       :   yabai -m space --gap dec

# toggle padding and gap
spacey < shift - a       :   yabai -m space --toggle padding; yabai -m space --toggle gap

# from https://anuj-chandra.medium.com/using-i3-like-tiling-window-managers-in-macos-with-yabai-ebf0e002b992
cmd + alt - space : yabai -m space --layout "$(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "stack" else "bsp" end')"

# forward
cmd + alt - up : yabai -m query --windows --space \
  | jq -sre 'add | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.x, .id) | reverse | nth(index(map(select(."has-focus"))) - 1).id' \
  | xargs -I{} yabai -m window --focus {}

# backward
cmd + alt - down: yabai -m query --windows --space \
  | jq -sre 'add | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.y, .id) | nth(index(map(select(."has-focus"))) - 1).id' \
  | xargs -I{} yabai -m window --focus {}

#spacey < shift - x       :   kwmc spacey -g decrease horizontal
#spacey < shift - y       :   kwmc spacey -g decrease vertical

# Increase window padding
#spacey < h               :   chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge west
#spacey < j               :   chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge south
#spacey < k               :   chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge south
#spacey < l               :   chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge south

# Decrease window padding
#spacey < shift - h       :   chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge west
#spacey < shift - j       :   chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge south
#spacey < shift - k       :   chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge south
#spacey < shift - l       :   chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge south


# tree mode
#tree < f                :   chunkc tiling::window -z fullscreen
#tree < d                :   chunkc tiling::window -z parent
#tree < w                :   chunkc tiling::window -t focused
#tree < r                :   chunkc tiling::tree rotate 90

# And from yabai's skhdrc:
#### # open terminal
#### cmd - return : /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~
#### 
#### # focus window
#### alt - h : yabai -m window --focus west
#### alt - j : yabai -m window --focus south
#### alt - k : yabai -m window --focus north
#### alt - l : yabai -m window --focus east
#### 
#### # swap window
#### shift + alt - h : yabai -m window --swap west
#### shift + alt - j : yabai -m window --swap south
#### shift + alt - k : yabai -m window --swap north
#### shift + alt - l : yabai -m window --swap east
#### 
#### # move window
#### shift + cmd - h : yabai -m window --warp west
#### shift + cmd - j : yabai -m window --warp south
#### shift + cmd - k : yabai -m window --warp north
#### shift + cmd - l : yabai -m window --warp east
#### 
#### # balance size of windows
#### shift + alt - 0 : yabai -m space --balance
#### 
#### # make floating window fill screen
#### shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1
#### 
#### # make floating window fill left-half of screen
#### shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1
#### 
#### # make floating window fill right-half of screen
#### shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1
#### 
#### # create desktop, move window and follow focus
#### shift + cmd - n : yabai -m space --create;\
####                   id=$(yabai -m query --displays --display | grep "spaces");\
####                   yabai -m window --space $(echo ${id:10:${#id}-10});\
####                   yabai -m space --focus $(echo ${id:10:${#id}-10})
#### 
#### # create desktop and follow focus
#### cmd + alt - n : yabai -m space --create;\
####                 id=$(yabai -m query --displays --display | grep "spaces");\
####                 yabai -m space --focus $(echo ${id:10:${#id}-10})
#### 
#### # destroy desktop
#### cmd + alt - w : yabai -m space --destroy
#### 
#### # fast focus desktop
#### cmd + alt - x : yabai -m space --focus recent
#### cmd + alt - z : yabai -m space --focus prev
#### cmd + alt - c : yabai -m space --focus next
#### cmd + alt - 1 : yabai -m space --focus 1
#### cmd + alt - 2 : yabai -m space --focus 2
#### cmd + alt - 3 : yabai -m space --focus 3
#### cmd + alt - 4 : yabai -m space --focus 4
#### cmd + alt - 5 : yabai -m space --focus 5
#### cmd + alt - 6 : yabai -m space --focus 6
#### cmd + alt - 7 : yabai -m space --focus 7
#### cmd + alt - 8 : yabai -m space --focus 8
#### cmd + alt - 9 : yabai -m space --focus 9
#### cmd + alt - 0 : yabai -m space --focus 10
#### 
#### # send window to desktop and follow focus
#### shift + cmd - x : yabai -m window --space recent; yabai -m space --focus recent
#### shift + cmd - z : yabai -m window --space prev; yabai -m space --focus prev
#### shift + cmd - c : yabai -m window --space next; yabai -m space --focus next
#### shift + cmd - 1 : yabai -m window --space  1; yabai -m space --focus 1
#### shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2
#### shift + cmd - 3 : yabai -m window --space  3; yabai -m space --focus 3
#### shift + cmd - 4 : yabai -m window --space  4; yabai -m space --focus 4
#### shift + cmd - 5 : yabai -m window --space  5; yabai -m space --focus 5
#### shift + cmd - 6 : yabai -m window --space  6; yabai -m space --focus 6
#### shift + cmd - 7 : yabai -m window --space  7; yabai -m space --focus 7
#### shift + cmd - 8 : yabai -m window --space  8; yabai -m space --focus 8
#### shift + cmd - 9 : yabai -m window --space  9; yabai -m space --focus 9
#### shift + cmd - 0 : yabai -m window --space 10; yabai -m space --focus 10
#### 
#### # focus monitor
#### ctrl + alt - x  : yabai -m display --focus recent
#### ctrl + alt - z  : yabai -m display --focus prev
#### ctrl + alt - c  : yabai -m display --focus next
#### ctrl + alt - 1  : yabai -m display --focus 1
#### ctrl + alt - 2  : yabai -m display --focus 2
#### ctrl + alt - 3  : yabai -m display --focus 3
#### 
#### # send window to monitor and follow focus
#### ctrl + cmd - x  : yabai -m window --display recent; yabai -m display --focus recent
#### ctrl + cmd - z  : yabai -m window --display prev; yabai -m display --focus prev
#### ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
#### ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1
#### ctrl + cmd - 2  : yabai -m window --display 2; yabai -m display --focus 2
#### ctrl + cmd - 3  : yabai -m window --display 3; yabai -m display --focus 3
#### 
#### # move window
#### shift + ctrl - a : yabai -m window --move rel:-20:0
#### shift + ctrl - s : yabai -m window --move rel:0:20
#### shift + ctrl - w : yabai -m window --move rel:0:-20
#### shift + ctrl - d : yabai -m window --move rel:20:0
#### 
#### # increase window size
#### shift + alt - a : yabai -m window --resize left:-20:0
#### shift + alt - s : yabai -m window --resize bottom:0:20
#### shift + alt - w : yabai -m window --resize top:0:-20
#### shift + alt - d : yabai -m window --resize right:20:0
#### 
#### # decrease window size
#### shift + cmd - a : yabai -m window --resize left:20:0
#### shift + cmd - s : yabai -m window --resize bottom:0:-20
#### shift + cmd - w : yabai -m window --resize top:0:20
#### shift + cmd - d : yabai -m window --resize right:-20:0
#### 
#### # set insertion point in focused container
#### ctrl + alt - h : yabai -m window --insert west
#### ctrl + alt - j : yabai -m window --insert south
#### ctrl + alt - k : yabai -m window --insert north
#### ctrl + alt - l : yabai -m window --insert east
#### 
#### # rotate tree
#### alt - r : yabai -m space --rotate 90
#### 
#### # mirror tree y-axis
#### alt - y : yabai -m space --mirror y-axis
#### 
#### # mirror tree x-axis
#### alt - x : yabai -m space --mirror x-axis
#### 
#### # toggle desktop offset
#### alt - a : yabai -m space --toggle padding; yabai -m space --toggle gap
#### 
#### # toggle window parent zoom
#### alt - d : yabai -m window --toggle zoom-parent
#### 
#### # toggle window fullscreen zoom
#### alt - f : yabai -m window --toggle zoom-fullscreen
#### 
#### # toggle window native fullscreen
#### shift + alt - f : yabai -m window --toggle native-fullscreen
#### 
#### # toggle window border
#### shift + alt - b : yabai -m window --toggle border
#### 
#### # toggle window split type
#### alt - e : yabai -m window --toggle split
#### 
#### # float / unfloat window and center on screen
#### alt - t : yabai -m window --toggle float;\
####           yabai -m window --grid 4:4:1:1:2:2
#### 
#### # toggle sticky
#### alt - s : yabai -m window --toggle sticky
#### 
#### # toggle sticky, float and resize to picture-in-picture size
#### alt - p : yabai -m window --toggle sticky;\
####           yabai -m window --grid 5:5:4:0:1:1
#### 
#### # change layout of desktop
#### ctrl + alt - a : yabai -m space --layout bsp
#### ctrl + alt - d : yabai -m space --layout float
